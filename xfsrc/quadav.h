//	Copyright (c) 1982 Dyadic Systems Limited	

#ifndef _QUADAV_H
#define _QUADAV_H

#if !HAS_UNICODE
# define AV_STR_QUAD	"\x8c"		// decimal 140, from win.dot
#elif RIOS
# define AV_STR_QUAD	GSTR("")
#else
# define AV_STR_QUAD	GSTR("\x2395")	// can't use AV_QUAD as it's a macro and won't get expanded
#endif

// e.g.
// static gchar *av = GSTR("This is quad AV: ") AV_STR_QUAD GSTR("AV");


#define DEFINE_AV(X) \
	X(AV_AV0,		0x00, 0x0000) \
	X(AV_BS,		0x01, 0x0008) \
	X(AV_LF,		0x02, 0x000a) \
	X(AV_CR,		0x03, 0x000d) \
	X(AV_SP,		0x04, 0x0020) \
	X(AV_AV5,		0x05, 0x000c) /* FF */ \
	X(AV_AV6,		0x06, 0x0006) \
	X(AV_AV7,		0x07, 0x0007) \
	X(AV_AV8,		0x08, 0x001b) /* ESCAPE */ \
	X(AV_TAB,		0x09, 0x0009) /* HTAB */ \
	X(AV_IBEAM,		0x0a, 0x2336) \
	X(AV_BSTILE,		0x0b, 0x026b) \
	X(AV_PERCENT,		0x0c, 0x0025) \
	X(AV_QUOTE,		0x0d, 0x0027) \
	X(AV_ALPHA,		0x0e, 0x237a) \
	X(AV_OMEGA,		0x0f, 0x2375) \
	X(AV_UNDER,		0x10, 0x005F) \
	X(AV_AL,		0x11, 0x0061) \
	X(AV_BL,		0x12, 0x0062) \
	X(AV_CL,		0x13, 0x0063) \
	X(AV_DL,		0x14, 0x0064) \
	X(AV_EL,		0x15, 0x0065) \
	X(AV_FL,		0x16, 0x0066) \
	X(AV_GL,		0x17, 0x0067) \
	X(AV_HL,		0x18, 0x0068) \
	X(AV_IL,		0x19, 0x0069) \
	X(AV_JL,		0x1a, 0x006a) \
	X(AV_KL,		0x1b, 0x006b) \
	X(AV_LL,		0x1c, 0x006c) \
	X(AV_ML,		0x1d, 0x006d) \
	X(AV_NL,		0x1e, 0x006e) \
	X(AV_OL,		0x1f, 0x006f) \
	X(AV_PL,		0x20, 0x0070) \
	X(AV_QL,		0x21, 0x0071) \
	X(AV_RL,		0x22, 0x0072) \
	X(AV_SL,		0x23, 0x0073) \
	X(AV_TL,		0x24, 0x0074) \
	X(AV_UL,		0x25, 0x0075) \
	X(AV_VL,		0x26, 0x0076) \
	X(AV_WL,		0x27, 0x0077) \
	X(AV_XL,		0x28, 0x0078) \
	X(AV_YL,		0x29, 0x0079) \
	X(AV_ZL,		0x2a, 0x007a) \
	X(AV_AV2B,		0x2b, 0x0001) \
	X(AV_AV2C,		0x2c, 0x0002) \
	X(AV_HIGH,		0x2d, 0x00af) \
	X(AV_POINT,		0x2e, 0x002e) \
	X(AV_ZILDE,		0x2f, 0x236c) \
	X(AV_ZERO,		0x30, 0x0030) \
	X(AV_ONE,		0x31, 0x0031) \
	X(AV_TWO,		0x32, 0x0032) \
	X(AV_THREE,		0x33, 0x0033) \
	X(AV_FOUR,		0x34, 0x0034) \
	X(AV_FIVE,		0x35, 0x0035) \
	X(AV_SIX,		0x36, 0x0036) \
	X(AV_SEVEN,		0x37, 0x0037) \
	X(AV_EIGHT,		0x38, 0x0038) \
	X(AV_NINE,		0x39, 0x0039) \
	X(AV_AV3A,		0x3a, 0x0003) \
	X(AV_RTACK,		0x3b, 0x22a2) \
	X(AV_AV3C,		0x3c, 0x00a5) /* YEN */ \
	X(AV_DOLLAR,		0x3d, 0x0024) \
	X(AV_POUND,		0x3e, 0x00a3) \
	X(AV_CENT,		0x3f, 0x00a2) \
	X(AV_DELTA,		0x40, 0x2206) \
	X(AV_A,			0x41, 0x0041) \
	X(AV_B,			0x42, 0x0042) \
	X(AV_C,			0x43, 0x0043) \
	X(AV_D,			0x44, 0x0044) \
	X(AV_E,			0x45, 0x0045) \
	X(AV_F,			0x46, 0x0046) \
	X(AV_G,			0x47, 0x0047) \
	X(AV_H,			0x48, 0x0048) \
	X(AV_I,			0x49, 0x0049) \
	X(AV_J,			0x4a, 0x004a) \
	X(AV_K,			0x4b, 0x004b) \
	X(AV_L,			0x4c, 0x004c) \
	X(AV_M,			0x4d, 0x004d) \
	X(AV_N,			0x4e, 0x004e) \
	X(AV_O,			0x4f, 0x004f) \
	X(AV_P,			0x50, 0x0050) \
	X(AV_Q,			0x51, 0x0051) \
	X(AV_R,			0x52, 0x0052) \
	X(AV_S,			0x53, 0x0053) \
	X(AV_T,			0x54, 0x0054) \
	X(AV_U,			0x55, 0x0055) \
	X(AV_V,			0x56, 0x0056) \
	X(AV_W,			0x57, 0x0057) \
	X(AV_X,			0x58, 0x0058) \
	X(AV_Y,			0x59, 0x0059) \
	X(AV_Z,			0x5a, 0x005a) \
	X(AV_AV5B,		0x5b, 0x0004) \
	X(AV_AV5C,		0x5c, 0x0005) \
	X(AV_AV5D,		0x5d, 0x00fd) /* L_YACUTE */ \
	X(AV_WDOT,		0x5e, 0x00b7) /* white dot // MDOT */ \
	X(AV_AV5F,		0x5f, 0x007f) /* white dot */ \
	X(AV_DELTAU,		0x60, 0x2359) \
	X(AV_AU,		0x61, 0x00c1) /* AACUTE */ \
	X(AV_BU,		0x62, 0x00c2) /* ACIRCUM */ \
	X(AV_CU,		0x63, 0x00c3) /* ATILDE */ \
	X(AV_DU,		0x64, 0x00c7) /* CCEDILLA */ \
	X(AV_EU,		0x65, 0x00c8) /* EGRAVE */ \
	X(AV_FU,		0x66, 0x00ca) /* ECIRCUM */ \
	X(AV_GU,		0x67, 0x00cb) /* EDIARESIS */ \
	X(AV_HU,		0x68, 0x00cc) /* IGRAVE */ \
	X(AV_IU,		0x69, 0x00cd) /* IACUTE */ \
	X(AV_JU,		0x6a, 0x00ce) /* ICIRCUM */ \
	X(AV_KU,		0x6b, 0x00cf) /* IDIARESIS */ \
	X(AV_LU,		0x6c, 0x00d0) /* ETH */ \
	X(AV_MU,		0x6d, 0x00d2) /* OGRAVE */ \
	X(AV_NU,		0x6e, 0x00d3) /* OACUTE */ \
	X(AV_OU,		0x6f, 0x00d4) /* OCIRCUM */ \
	X(AV_PU,		0x70, 0x00d5) /* OTILDE */ \
	X(AV_QU,		0x71, 0x00d9) /* UGRAVE */ \
	X(AV_RU,		0x72, 0x00da) /* UACUTE */ \
	X(AV_SU,		0x73, 0x00db) /* UCIRCUM */ \
	X(AV_TU,		0x74, 0x00dd) /* YACUTE */ \
	X(AV_UU,		0x75, 0x00fe) /* L_THORN */ \
	X(AV_VU,		0x76, 0x00e3) /* L_ATILDE */ \
	X(AV_WU,		0x77, 0x00ec) /* L_IGRAVE */ \
	X(AV_XU,		0x78, 0x00f0) /* L_ETH */ \
	X(AV_YU,		0x79, 0x00f2) /* L_OGRAVE */ \
	X(AV_ZU,		0x7a, 0x00f5) /* L_OTILDE */ \
	X(AV_LBRACE,		0x7b, 0x007b) \
	X(AV_EURO,		0x7c, 0x20ac) \
	X(AV_RBRACE,		0x7d, 0x007d) \
	X(AV_LTACK,		0x7e, 0x22a3) \
	X(AV_SQUISH,		0x7f, 0x2337) \
	X(AV_DIRESIS,		0x80, 0x00a8) \
	X(AV_ON,		0x81, 0x00c0) /* AGRAVE */ \
	X(AV_OVER,		0x82, 0x00c4) /* ADIARESIS */ \
	X(AV_ARING,		0x83, 0x00c5) \
	X(AV_CONV,		0x84, 0x00c6) /* AE */ \
	X(AV_COMM,		0x85, 0x2368) \
	X(AV_AV86,		0x86, 0x00c9) /* EACUTE */ \
	X(AV_AV87,		0x87, 0x00d1) /* NTILDE */ \
	X(AV_AV88,		0x88, 0x00d6) /* ODIARESIS */ \
	X(AV_AV89,		0x89, 0x00d8) /* OSLASH */ \
	X(AV_AV8a,		0x8a, 0x00dc) /* UDIARESIS */ \
	X(AV_AV8b,		0x8b, 0x00df) /* GERMAN S */ \
	X(AV_AV8c,		0x8c, 0x00e0) /* L_AGRAVE */ \
	X(AV_AV8d,		0x8d, 0x00e1) /* L_AACUTE */ \
	X(AV_AV8e,		0x8e, 0x00e2) /* L_ACIRCUM */ \
	X(AV_AV8f,		0x8f, 0x00e4) /* L_ADIARESIS */ \
	X(AV_AV90,		0x90, 0x00e5) /* L_ARING */ \
	X(AV_AV91,		0x91, 0x00e6) /* L_AE */ \
	X(AV_AV92,		0x92, 0x00e7) /* L_CCEDILLA */ \
	X(AV_AV93,		0x93, 0x00e8) /* L_EGRAVE */ \
	X(AV_AV94,		0x94, 0x00e9) /* L_EACUTE */ \
	X(AV_AV95,		0x95, 0x00ea) /* L_ECIRCU */ \
	X(AV_AV96,		0x96, 0x00eb) /* L_EDIARESIS */ \
	X(AV_AV97,		0x97, 0x00ed) /* L_IACUTE */ \
	X(AV_AV98,		0x98, 0x00ee) /* L_ICIRCUM */ \
	X(AV_AV99,		0x99, 0x00ef) /* L_IDIARESIS */ \
	X(AV_AV9a,		0x9a, 0x00f1) /* L_NTILDE */ \
	X(AV_LBRACKET,		0x9b, 0x005b) \
	X(AV_SLASH,		0x9c, 0x002f) \
	X(AV_BSLASH,		0x9d, 0x233f) \
	X(AV_SLOPE,		0x9e, 0x005c) \
	X(AV_BSLOPE,		0x9f, 0x2340) \
	X(AV_LT,		0xa0, 0x003c) \
	X(AV_LE,		0xa1, 0x2264) \
	X(AV_EQ,		0xa2, 0x003d) \
	X(AV_GE,		0xa3, 0x2265) \
	X(AV_GT,		0xa4, 0x003e) \
	X(AV_NE,		0xa5, 0x2260) \
	X(AV_OR,		0xa6, 0x2228) \
	X(AV_AND,		0xa7, 0x2227) \
	X(AV_MINUS,		0xa8, 0x002d) \
	X(AV_PLUS,		0xa9, 0x002b) \
	X(AV_DIVIDE,		0xaa, 0x00f7) \
	X(AV_TIMES,		0xab, 0x00d7) \
	X(AV_QUERY,		0xac, 0x003f) \
	X(AV_EPSILON,		0xad, 0x220a) \
	X(AV_RHO,		0xae, 0x2374) \
	X(AV_TILDE,		0xaf, 0x007e) \
	X(AV_UP,		0xb0, 0x2191) \
	X(AV_DOWN,		0xb1, 0x2193) \
	X(AV_IOTA,		0xb2, 0x2373) \
	X(AV_CIRCLE,		0xb3, 0x25cb) \
	X(AV_STAR,		0xb4, 0x002a) \
	X(AV_UPSTILE,		0xb5, 0x2308) \
	X(AV_DSTILE,		0xb6, 0x230a) \
	X(AV_DEL,		0xb7, 0x2207) \
	X(AV_JOT,		0xb8, 0x2218) \
	X(AV_LPAREN,		0xb9, 0x0028) \
	X(AV_LSHOE,		0xba, 0x2282) \
	X(AV_RSHOE,		0xbb, 0x2283) \
	X(AV_CAP,		0xbc, 0x2229) \
	X(AV_CUP,		0xbd, 0x222a) \
	X(AV_BASE,		0xbe, 0x22a5) \
	X(AV_TOP,		0xbf, 0x22a4) \
	X(AV_STILE,		0xc0, 0x007c) \
	X(AV_SEMI,		0xc1, 0x003b) \
	X(AV_COMMA,		0xc2, 0x002c) \
	X(AV_NOR,		0xc3, 0x2371) \
	X(AV_NAND,		0xc4, 0x2372) \
	X(AV_DGRADE,		0xc5, 0x2352) \
	X(AV_UPGRADE,		0xc6, 0x234b) \
	X(AV_TRANSPOSE,		0xc7, 0x2349) \
	X(AV_CIRCLESTILE,	0xc8, 0x233d) \
	X(AV_BCIRCLE,		0xc9, 0x2296) \
	X(AV_LOG,		0xca, 0x235f) \
	X(AV_DOMINO,		0xcb, 0x2339) \
	X(AV_SHRIEK,		0xcc, 0x0021) \
	X(AV_THORN,		0xcd, 0x2355) \
	X(AV_HYDRANT,		0xce, 0x234e) \
	X(AV_DELTILDE,		0xcf, 0x236b) \
	X(AV_BCOMMA,		0xd0, 0x236a) \
	X(AV_MATCH,		0xd1, 0x2261) \
	X(AV_NOTMATCH,		0xd2, 0x2262) \
	X(AV_AVD3,		0xd3, 0x00f3) \
	X(AV_AVD4,		0xd4, 0x00f4) \
	X(AV_AVD5,		0xd5, 0x00f6) \
	X(AV_AVD6,		0xd6, 0x00f8) \
	X(AV_DQUOTE,		0xd7, 0x0022) \
	X(AV_HASH,		0xd8, 0x0023) \
	X(AV_AVD9,		0xd9, 0x001e) \
	X(AV_AMPERSAND,		0xda, 0x0026) \
	X(AV_ACUTE,		0xdb, 0x00b4) \
	X(AV_LINE_LR,		0xdc, 0x2518) /* Lower  Right Corner */ \
	X(AV_LINE_UR,		0xdd, 0x2510) /* Upper  Right Corner */ \
	X(AV_LINE_UL,		0xde, 0x250c) /* Upper  Left  Corner */ \
	X(AV_LINE_LL,		0xdf, 0x2514) /* Lower  Left  Corner */ \
	X(AV_LINE_MM,		0xe0, 0x253c) /* Middle Middle Cross */ \
	X(AV_LINE_HZ,		0xe1, 0x2500) /* Horizontal Line */ \
	X(AV_LINE_ML,		0xe2, 0x251c) /* Middle Left   Tee */ \
	X(AV_LINE_MR,		0xe3, 0x2524) /* Middle Right  Tee */ \
	X(AV_LINE_LM,		0xe4, 0x2534) /* Lower  Middle Tee */ \
	X(AV_LINE_UM,		0xe5, 0x252c) /* Upper  Middle Tee */ \
	X(AV_LINE_VT,		0xe6, 0x2502) /* Vertical Line */ \
	X(AV_ASCAT,		0xe7, 0x0040) \
	X(AV_AVE8,		0xe8, 0x00f9) \
	X(AV_AVE9,		0xe9, 0x00fa) \
	X(AV_AVEA,		0xea, 0x00fb) \
	X(AV_CIRCUMFLEX,	0xeb, 0x005e) \
	X(AV_AVEC,		0xec, 0x00fc) \
	X(AV_GRAVE,		0xed, 0x0060) \
	X(AV_ASCBAR,		0xee, 0x2223) \
	X(AV_AVEF,		0xef, 0x00b6) \
	X(AV_COLON,		0xf0, 0x003a) \
	X(AV_EPSUBAR,		0xf1, 0x2377) \
	X(AV_AVF2,		0xf2, 0x00bf) \
	X(AV_AVF3,		0xf3, 0x00a1) \
	X(AV_DIAMOND,		0xf4, 0x22c4) \
	X(AV_LEFT,		0xf5, 0x2190) \
	X(AV_RIGHT,		0xf6, 0x2192) \
	X(AV_LAMP,		0xf7, 0x235D) \
	X(AV_RPAREN,		0xf8, 0x0029) \
	X(AV_RBRACKET,		0xf9, 0x005d) \
	X(AV_AVFA,		0xfa, 0x001f) \
	X(AV_AVFB,		0xfb, 0x00A0) \
	X(AV_AVFC,		0xfc, 0x00a7) \
	X(AV_QUAD,		0xfd, 0x2395) \
	X(AV_QUADQUOTE,		0xfe, 0x235e) \
	X(AV_DIRESISSTAR,	0xff, 0x2363)


#ifdef DEFINE_UNICODE_MAP

unicode_t DEFINE_UNICODE_MAP[256] =
{
#define ADD_AV(name, val, uni) uni,
	DEFINE_AV(ADD_AV)
#undef ADD_AV
};

#endif // DEFINE_UNICODE_MAP


#define UNI_LSHOE_UBAR	0x2286	// "Left shoe underbar"
#define UNI_KEY		0x2338	// "Quad equal"
#define UNI_STENCIL	0x233a	// "Quad diamond"
#define UNI_VARIANT	0x2360	// "Quad colon"
#define UNI_RANK	0x2364	// "Jot diaeresis"
#define UNI_IOTA_UBAR	0x2378	// "Iota underbar"
#define UNI_PARALLEL	0x2225	// "parallel"
#define UNI_CURRENCY	0x00a4	// "currency/isolate"
#define UNI_HOOF	0x2365	// "hoof"


#if HAS_UNICODE	

#define AV_NEWLINE    0x000d	// I don't like this

#define ADD_AV(name, val, uni) name = uni,

#else // HAS_UNICODE

#define AV_NEWLINE 0x03	

#define ADD_AV(name, val, uni) name = val,

#endif // HAS_UNICODE

typedef enum
{
	DEFINE_AV(ADD_AV)
}
QuadAV;

#undef ADD_AV


#define AV_SPACE 	AV_SP
#define AV_DOT 		AV_POINT

extern bool IsLikeNewLine(uns c);
extern achar LineEnding(void);

#endif // _QUADAV_H

//	Copyright (c) 1982 Dyadic Systems Limited	
